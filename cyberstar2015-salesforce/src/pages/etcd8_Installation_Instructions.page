<apex:page >

<br/>
<h1>Linear" Round-Robin Lead Distribution Engine </h1>

<br/><br/>
<h1>PART I: Installation Instructions - IMPORTANT</h1><br/><br/>
This critical task must be completed in order for the RR Lead Assignment Engine to work!
<br/><br/>
1. Create a Queue called 'Unassigned', and set as the default lead owner. This queue name is required, so if you have an existing queue named 'Unassigned' you will have to rename that queue in order for this lead assignment engine to function properly.
<br/><br/>

<h1>PART II: Understanding the "Linear" Round-Robin Lead Distribution Engine </h1>
<br/><br/>
"Linear" Round-Robin: think of dealing out a deck of cards (leads) around a table. Leads are assigned based on the Lead Recipient order in the Management Console tab, which is an alpha-sort on last name. We like this approach better than the "last touched/ last activity" round-robin algorithm because it is easy to manage and simple to understand.
<br/><br/>
This Lead Assignment Engine works alongside standard lead assignment rules, giving you the ability to continue to control assignments w/ standard point and click configuration. This engine does not replace or override standard lead assignment rules!
<br/><br/>
In order for a Lead to be processed through this RR Engine, it MUST first go through standard lead assignment rules. For Leads created via point-and-click, you must check the 'Assign using active assignment rule' checkbox on Lead. For code-based Lead creates, you must set DMLOptions via Database class.
<br/><br/>
Think of this lead assignment engine like a filter... if the standard lead assignment rules fail to assign the lead, then the lead will be assigned to 'Unassigned', which is the trigger to proceed to round-robin lead assignment.
<br/><br/>

We hope you find this solution to be useful, and welcome any customization inquiries.<br/><br/>

Thanks!<br/>
eightCloud Team<br/><br/>
<apex:image url="{!$Resource.eightCloudLogo}" width="80" height="57"/>



</apex:page>