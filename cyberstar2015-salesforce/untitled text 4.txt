 public static void onAfterDelete(list <Case> listCase){

            List<Entitlement> entitleToDelete = new List<Entitlement>();
            List<Entitlement> entitleToDeleteList = new List<Entitlement>();

        for (Case caseRec : listCase) {
            System.debug('########## ENT TO DELETE');
            entitleToDelete = [Select Id from entitlement Where id = : caseRec.EntitlementId];
            for (Entitlement ent : entitleToDelete) {
                System.debug('########## EntitlementToDelete' + ent.Id);
                if (entitleToDeleteList.size() > 0){
                    entitleToDeleteList.add(ent);
                }
                delete entitleToDeleteList;
            }
        }

      } 
      
      
      
      



     public static void onAfterDelete(list <Case> listCase){

            List<Entitlement> entitleToDelete = new List<Entitlement>();
            List<Entitlement> entitleToDeleteList = new List<Entitlement>();

        for (Case caseRec : listCase) {
            System.debug('########## ENT TO DELETE');
            Entitlement ent = [Select Id from entitlement Where id = : caseRec.EntitlementId];
            delete ent;

        }

      } 