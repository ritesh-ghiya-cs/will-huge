<apex:page sidebar="false" controller="ePrize_Zemzu.BuilderAssignParticipantsController" tabStyle="AssignBuilders__tab" readonly="false">
  <apex:composition template="ePrize_Zemzu__CompetePageTemplate">
    <apex:define name="pageTitle">Assign LevelEleven Participants</apex:define>
    <apex:define name="contentMain">
      <div id="theLoader" style="display: block; height: 300px; width: 100%">
        <table border="0" width="100%" height="100%">
          <tr>
            <td valign="middle" align="center">
              <img src="{!URLFOR($Resource.compete, 'images/arrow_loader_64.gif')}" />
            </td>
          </tr>
        </table>
      </div>
      <div id="thePage" style="display: none;">
        <apex:form >
          <div class="l11 l11-panel">
            <div class="inner">
              <h2>
                    {!IF(currentBuilderInFocusName == '', 'Invalid Contest Builder', 'Select the Contest Participants for ' + currentBuilderInFocusName)}
              </h2>
              <div class="divider"/>
              <apex:pageBlock >
                <apex:pageBlockButtons location="bottom">
                  <apex:commandButton action="{!save}" value="Save" disabled="{!currentBuilderInFocusName == ''}"/>
                  <apex:commandButton action="{!cancel}" value="Cancel" onclick="return confirmCancel()" immediate="true"/>
                </apex:pageBlockButtons>
                <apex:pageBlockSection columns="1" collapsible="false">
                  <apex:outputPanel >
                    <apex:outputText value="When a LevelEleven Builder is creating a contest, they will be able to select up to {0} Salesforce users who can participate in the contest. These are the users whose sales activity will be tracked in the contest, will view the leaderboards and be able to receive contest leaderboard updates.">
                      <apex:param value="{!maxContestParticipants}"/>
                    </apex:outputText>
                    <br/>
                    <apex:outputText value="Below you will identify which users to assign to this LevelEleven Builder. This helps the LevelEleven Builder because they will only see relevant users for a potential contest they create."/>
                  </apex:outputPanel>
                  <apex:outputText rendered="{!currentBuilderInFocusName = ''}" value="An invalid LevelEleven builder was selected."/>
                  <apex:outputPanel rendered="{!currentBuilderInFocusName != ''}">
                  <apex:outputpanel id="searchPanel">
                      <apex:outputLabel value="Search"/>
                      &nbsp;&nbsp;&nbsp;
                      <apex:inputText value="{!searchValue}" onkeypress="return noenter(event);"/>
                      <apex:actionFunction name="doSearchAF" action="{!search}" rerender="searchPanel, selectUserPanel" status="userTableLoadingStatus"/>
                      <span style="margin-left: 5px;">
                          <apex:selectList value="{!usersTableSearchFilterOption}" multiselect="false" size="1">
                              <apex:selectOptions value="{!usersSearchFilterOptions}" />
                          </apex:selectList>
                      </span>
                      &nbsp;&nbsp;&nbsp;
                      <apex:commandButton action="{!search}" value="Search" rerender="searchPanel, selectUserPanel" status="userTableLoadingStatus"/>          
                      <span style="margin-left: 45px;">
                          <apex:selectList value="{!selectedUsersTableFilterOption}" multiselect="false" size="1">
                              <apex:selectOptions value="{!usersTableFilterOptions}"/>
                              <apex:actionSupport event="onchange" action="{!onUsersTableFilterOptionSelected}" rerender="searchPanel, selectUserPanel" status="userTableLoadingStatus"/>
                          </apex:selectList>
                      </span>          
                  </apex:outputpanel>            
                    
                    <apex:outputPanel id="selectUserPanel">
                      <apex:panelGrid columns="5" style="float:right">
                        <apex:commandButton status="userTableLoadingStatus" reRender="selectUserPanel" value="|<" action="{!firstPage}" disabled="{!!hasPreviousPage}" title="First Page"/>
                        <apex:commandButton status="userTableLoadingStatus" reRender="selectUserPanel" value="<" action="{!previousPage}" disabled="{!!hasPreviousPage}" title="Previous Page"/>
                        <apex:commandButton status="userTableLoadingStatus" reRender="selectUserPanel" value=">" action="{!nextPage}" disabled="{!!hasNextPage}" title="Next Page"/>
                        <apex:commandButton status="userTableLoadingStatus" reRender="selectUserPanel" value=">|" action="{!lastPage}" disabled="{!!hasNextPage}" title="Last Page"/>
                        <apex:outputText style="display:inline-block;font-style:italic;padding:5px;" value="{!usersViewedDetail}"/>
                      </apex:panelGrid>

                      <!-- This clear is needed to appropriately finish off the floated section above-->
                      <div class="clear"></div>
                      
                      <apex:actionStatus id="userTableLoadingStatus">
                        <apex:facet name="start">
                          <div style="display: block; height: 100px; width: 100%">
                            <table border="0" width="100%" height="100%">
                              <tr>
                                <td valign="middle" align="center">
                                  <img src="{!URLFOR($Resource.compete, 'images/arrow_loader_64.gif')}" />
                                </td>
                              </tr>
                            </table>
                          </div>
                        </apex:facet>
                        <apex:facet name="stop">
                          <apex:pageBlockTable id="availableUsersTable" value="{!availableContestParticipants}" var="u" rowClasses="odd,even">
                            <apex:column >
                              <apex:facet name="header">
                                <apex:inputCheckbox value="{!checkAll}" onclick="checkAll(this)"/>
                              </apex:facet>
                              <apex:inputCheckbox value="{!u.selected}" id="checkedone"/>
                            </apex:column>
                            <apex:column >
                              <apex:facet name="header">
                                <apex:commandLink value="First Name" action="{!doSort}" reRender="selectUserPanel" status="userTableLoadingStatus">
                                  <apex:param name="sortField" value="FirstName" assignTo="{!sortField}"/>
                                </apex:commandLink>
                              </apex:facet>
                              <apex:outputField value="{!u.selectedUser.FirstName}"/>
                            </apex:column>
                            <apex:column >
                              <apex:facet name="header">
                                <apex:commandLink value="Last Name" action="{!doSort}" reRender="selectUserPanel" status="userTableLoadingStatus">
                                  <apex:param name="sortField" value="LastName" assignTo="{!sortField}"/>
                                </apex:commandLink>
                              </apex:facet>
                              <apex:outputField value="{!u.selectedUser.LastName}"/>
                            </apex:column>
                            <apex:column >
                              <apex:facet name="header">
                                <apex:commandLink value="Role" action="{!doSort}" reRender="selectUserPanel" status="userTableLoadingStatus">
                                  <apex:param name="sortField" value="UserRole.Name" assignTo="{!sortField}"/>
                                </apex:commandLink>                                                  
                              </apex:facet>
                              <apex:outputText value="{!u.selectedUser.UserRole.Name}"/>
                            </apex:column>
                            <apex:column >
                              <apex:facet name="header">
                                <apex:commandLink value="Profile" action="{!doSort}" reRender="selectUserPanel" status="userTableLoadingStatus">
                                  <apex:param name="sortField" value="Profile.Name" assignTo="{!sortField}"/>
                                </apex:commandLink>
                              </apex:facet>
                              <apex:outputText value="{!u.SelectedUser.Profile.Name}"/>
                            </apex:column>
                            <apex:column >
                              <apex:facet name="header">
                                <apex:commandLink value="Division" action="{!doSort}" reRender="selectUserPanel" status="userTableLoadingStatus">
                                  <apex:param name="sortField" value="Division" assignTo="{!sortField}"/>
                                </apex:commandLink>
                              </apex:facet>
                              <apex:outputText value="{!u.selectedUser.Division}"/>
                            </apex:column>
                            <apex:column >
                              <apex:facet name="header">
                                <apex:commandLink value="Department" action="{!doSort}" reRender="selectUserPanel" status="userTableLoadingStatus">
                                  <apex:param name="sortField" value="Department" assignTo="{!sortField}"/>
                                </apex:commandLink>
                              </apex:facet>
                              <apex:outputText value="{!u.selectedUser.Department}"/>
                            </apex:column>
                            <apex:column >
                              <apex:facet name="header">
                                <apex:commandLink value="Title" action="{!doSort}" reRender="selectUserPanel" status="userTableLoadingStatus">
                                  <apex:param name="sortField" value="Title" assignTo="{!sortField}"/>
                                </apex:commandLink>
                              </apex:facet>
                              <apex:outputText value="{!u.selectedUser.Title}"/>
                            </apex:column>
                          </apex:pageBlockTable>
                        </apex:facet>
                      </apex:actionStatus>
                      <apex:outputText rendered="{!IF(availableContestParticipants.size == 0, true, false)}" value="No matching data found." />
                      <apex:panelGrid columns="5" style="float:right">
                        <apex:commandButton status="userTableLoadingStatus" reRender="selectUserPanel" value="|<" action="{!firstPage}" disabled="{!!hasPreviousPage}" title="First Page"/>
                        <apex:commandButton status="userTableLoadingStatus" reRender="selectUserPanel" value="<" action="{!previousPage}" disabled="{!!hasPreviousPage}" title="Previous Page"/>
                        <apex:commandButton status="userTableLoadingStatus" reRender="selectUserPanel" value=">" action="{!nextPage}" disabled="{!!hasNextPage}" title="Next Page"/>
                        <apex:commandButton status="userTableLoadingStatus" reRender="selectUserPanel" value=">|" action="{!lastPage}" disabled="{!!hasNextPage}" title="Last Page"/>
                        <apex:outputText style="display:inline-block;font-style:italic;padding:5px;" value="{!usersViewedDetail}"/>
                      </apex:panelGrid>
                    </apex:outputPanel>
                  </apex:outputPanel>
                </apex:pageBlockSection>
              </apex:pageBlock>
            </div>
          </div>
        </apex:form>
      </div>
      <apex:includeScript value="{!$Resource.ePrize_Zemzu__app}"/>
    <script type="text/javascript">
      function confirmCancel() {
        var isCancel = confirm("Are you sure you wish to cancel?");
        if (isCancel) return true;

        return false;
      }

      function checkAll(cb)
      {
        var inputElem = document.getElementsByTagName("input");
        for(var i=0; i<inputElem.length; i++)
        {
          if(inputElem[i].id.indexOf("checkedone")!=-1)
            inputElem[i].checked = cb.checked;
        }
      }

      function noenter(ev)
      {
        if (window.event && window.event.keyCode == 13 || ev.which == 13) {
          doSearchAF();
          return false;
        } else {
          return true;
        }
      }
    </script>
    </apex:define>
    
  </apex:composition>
</apex:page>