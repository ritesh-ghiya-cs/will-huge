<!-- 
Copyright 2011 Jeff Trull <jetrull@sbcglobal.net>

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 -->
<apex:component controller="HierarchyController" allowDML="true">
    <!-- a VF component for modifying the hierarchy of an SObject (Campaign, Account, etc.) using an ExtJS TreePanel -->
    <!-- Jeff Trull jetrull@sbcglobal.net 2010-12-01 -->
    <apex:attribute name="object" type="Object" description="sObject to edit hierarchy on" default="Campaign"/>
    <apex:attribute name="fn" type="String" description="name of a Javascript function to call with ID once a Campaign is selected." required="false" default=""/>

    <script type="text/javascript">
        Ext.onReady(function() {
            // BUG WORKAROUND
            // DirectProxy gets perfectly fine formatted data from api calls, then discards it
            // This may simply be a difference between ExtJS 3 (used by Remoting) and 4...
            Ext.data.proxy.Direct.prototype.createRequestCallback =
                function(request, operation, callback, scope){
                    var me = this;
                    return function(data, event){
                        // supply "data" (properly processed data), not "event", as fourth arg
                        me.processResponse(event.status, operation, request,
                                           {data: data}, callback, scope);
                    };
                };
            
            // old Direct used by SFDC does not supply getArgs method (expected by 4.1) for Remoting methods
            HierarchyController.findChildObjects.directCfg.method.getArgs = Ext.direct.RemotingMethod.prototype.getArgs;
            HierarchyController.setParent.directCfg.method.getArgs = Ext.direct.RemotingMethod.prototype.getArgs;
                        
            var store = Ext.create('Ext.data.TreeStore', {
                root: {
                    text: 'All {!object}s',
                    expandable: true,
                    allowDrag: false,
                    id: 'root'              // because you cannot use a blank id (Ext would create one)
                },
                proxy: {
                    type: 'direct',
                    directFn: HierarchyController.findChildObjects,
                    extraParams: {sobjname: '{!object}'}
                }
            });
                

            var tree = Ext.create('Ext.tree.Panel', {
                renderTo: '{!$Component.myTree}',
                height: 460,
                useArrows: true,
                autoScroll: true,
                animate: true,
                containerScroll: true,
                border: false,
                viewConfig: {
                    plugins: {
                        ptype: 'treeviewdragdrop'
                    }
                },
                store: store,
                listeners: {beforeitemmove: function(node, oldParent, newParent) {
                                                if (oldParent.getId() == newParent.getId()) {
                                                    // just a change to ordering; no need for server request
                                                    return true;
                                                }
                                                var parent = newParent.getId();
                                                if (parent == 'root') {
                                                    parent = '';  // translate back into Apex world
                                                }
                                                HierarchyController.setParent('{!object}', parent, node.getId(),
                                                    function(response, event) {
                                                        if (event.status && response) {
                                                            // if level has changed to/from L5, adjust "leaf" property
                                                            if ((oldParent.getDepth() == 4) || (newParent.getDepth() == 4)) {
                                                                node.set('leaf', (newParent.getDepth() == 4));
                                                            }
                                                        }
                                                    });
                                                return true;
                                            },
                            beforeitemdblclick: function(view, record) {
                                               if (('{!fn}' != '') && (record.getId() != 'root')) {
                                                    {!fn}(record.getId());
                                                }
                                            }}

            });
                
            tree.getRootNode().expand();  // trigger load of top level objects
        });
    </script>
    <apex:outputPanel id="myTree" layout="block"/>

</apex:component>